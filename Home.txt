I have recently learned a few things from my other automation teams with respect to Alteryx to Snowflake data movement. As I am building my Tactical Shift solution in Alteryx, I want to confirm what I learned is correct with you. If yes, I want to discuss the below points as it might impact our BAU team (GCM team)
I want to confirm the below points:
- Snowflake classifies the data into two categories 1) Credit Orbit data 2) Galaxy data
- Galaxy data can be accessed from Alteryx but the credit orbit data is npt allowed to be accessed from Alteryx using FID in prodution env.
- If we want to access Credit Orbit data, it has to be accessed via Qliksense or Unqork (Unqork for meridian data & Qliksense for Midori data)
My questions:
- Does qliksense have the live data? if no, how many days delay can we expect?
- Can we get both galaxy & Credit Orbit data from Qliksense?
- How can we query in qliksense when we need data from multiple tables?
- Can we extract the qliksense data and store it in Shared drive?
I have attached the data modle that we received from other teams here for your reference.




Hereâ€™s the updated version with your additional points included:

"This project is for the CMO Collateral Team, focusing on automating the process of identifying margin calls eligible for tactical benefits, applying those benefits, and calculating new margin call amounts.

I conducted workshops with our offshore operations team partner to understand the current business model and create the business requirements. One of the biggest challenges we faced was managing continuously changing requirements due to the multiple, complex business rules involved.

Initially, we reviewed the requirements with our offshore partner, but we needed sign-off from the onshore business team. While waiting for their review, I started working on the Alteryx workflow. During discussions with the onshore team, we identified additional requirements that needed to be captured and incorporated into the project.

After updating the requirements, we shared them for review and waited a month for final sign-off. Meanwhile, we discovered that the required data was in Snowflake, but neither we nor the Snowflake product owner knew where the data resided. We worked on the data mapping and field identification, only to find that the credit orbit data couldn't be accessed through IA tools. This left us with QlikSense as the only way to access the data.

The Snowflake team proposed leveraging QlikSense self-service reports instead of using a combination of Alteryx, QlikSense, and Snowflake. They suggested eliminating the Alteryx workflow by building the entire logic within QlikSense. Since the GCM team was already using QlikSense self-service reports, they agreed to integrate these enhancements into their existing reports.

Our goal was to implement and rebuild this entire logic in QlikSense. However, when I discussed my workload with my manager, he proposed utilizing another resource with expertise in QlikSense. Instead of me learning the tool and building the project, it would be more efficient to hand it off to someone else. We worked with multiple teams to find a suitable resource. I conducted a couple of knowledge transfer sessions to walk them through the business requirements and my Alteryx workflow, showing them how I built it. After reviewing the business logic, they informed us that the project involved a lot of complex business rules, and it would take about a month to complete. Additionally, they could not prioritize it immediately due to other commitments.

Finally, we decided to take a tactical approach. We agreed to manually download the QlikSense data and place it in a shared drive for Alteryx to consume. This way, we could still leverage my Alteryx workflow while obtaining the necessary data from QlikSense. I am currently working with the QlikSense developer to locate the data and complete the data mapping."
